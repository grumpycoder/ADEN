//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace Aden.DirectoryService.IdemService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ServiceSoap", Namespace="http://services.alsde.edu/ALSDEAPI")]
    public partial class Service : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetCertificateTypesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGradeLevelsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLeasOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPersonDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPersonListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSchoolsByLeaOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUniversityPrepProgramsOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Service() {
            this.Url = global::Aden.DirectoryService.Properties.Settings.Default.Aden_DirectoryService_IdemService_Service;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetCertificateTypesCompletedEventHandler GetCertificateTypesCompleted;
        
        /// <remarks/>
        public event GetGradeLevelsCompletedEventHandler GetGradeLevelsCompleted;
        
        /// <remarks/>
        public event GetLeasCompletedEventHandler GetLeasCompleted;
        
        /// <remarks/>
        public event GetPersonDetailCompletedEventHandler GetPersonDetailCompleted;
        
        /// <remarks/>
        public event GetUserDetailCompletedEventHandler GetUserDetailCompleted;
        
        /// <remarks/>
        public event GetPersonListCompletedEventHandler GetPersonListCompleted;
        
        /// <remarks/>
        public event GetSchoolsByLeaCompletedEventHandler GetSchoolsByLeaCompleted;
        
        /// <remarks/>
        public event GetUniversityPrepProgramsCompletedEventHandler GetUniversityPrepProgramsCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://services.alsde.edu/ALSDEAPI/GetCertificateTypes", RequestNamespace="http://services.alsde.edu/ALSDEAPI", ResponseNamespace="http://services.alsde.edu/ALSDEAPI", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetCertificateTypes(string accessKey, string sharedToken) {
            object[] results = this.Invoke("GetCertificateTypes", new object[] {
                        accessKey,
                        sharedToken});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetCertificateTypesAsync(string accessKey, string sharedToken) {
            this.GetCertificateTypesAsync(accessKey, sharedToken, null);
        }
        
        /// <remarks/>
        public void GetCertificateTypesAsync(string accessKey, string sharedToken, object userState) {
            if ((this.GetCertificateTypesOperationCompleted == null)) {
                this.GetCertificateTypesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCertificateTypesOperationCompleted);
            }
            this.InvokeAsync("GetCertificateTypes", new object[] {
                        accessKey,
                        sharedToken}, this.GetCertificateTypesOperationCompleted, userState);
        }
        
        private void OnGetCertificateTypesOperationCompleted(object arg) {
            if ((this.GetCertificateTypesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCertificateTypesCompleted(this, new GetCertificateTypesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://services.alsde.edu/ALSDEAPI/GetGradeLevels", RequestNamespace="http://services.alsde.edu/ALSDEAPI", ResponseNamespace="http://services.alsde.edu/ALSDEAPI", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetGradeLevels(string accessKey, string sharedToken) {
            object[] results = this.Invoke("GetGradeLevels", new object[] {
                        accessKey,
                        sharedToken});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetGradeLevelsAsync(string accessKey, string sharedToken) {
            this.GetGradeLevelsAsync(accessKey, sharedToken, null);
        }
        
        /// <remarks/>
        public void GetGradeLevelsAsync(string accessKey, string sharedToken, object userState) {
            if ((this.GetGradeLevelsOperationCompleted == null)) {
                this.GetGradeLevelsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGradeLevelsOperationCompleted);
            }
            this.InvokeAsync("GetGradeLevels", new object[] {
                        accessKey,
                        sharedToken}, this.GetGradeLevelsOperationCompleted, userState);
        }
        
        private void OnGetGradeLevelsOperationCompleted(object arg) {
            if ((this.GetGradeLevelsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGradeLevelsCompleted(this, new GetGradeLevelsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://services.alsde.edu/ALSDEAPI/GetLeas", RequestNamespace="http://services.alsde.edu/ALSDEAPI", ResponseNamespace="http://services.alsde.edu/ALSDEAPI", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetLeas(string accessKey, string sharedToken) {
            object[] results = this.Invoke("GetLeas", new object[] {
                        accessKey,
                        sharedToken});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetLeasAsync(string accessKey, string sharedToken) {
            this.GetLeasAsync(accessKey, sharedToken, null);
        }
        
        /// <remarks/>
        public void GetLeasAsync(string accessKey, string sharedToken, object userState) {
            if ((this.GetLeasOperationCompleted == null)) {
                this.GetLeasOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLeasOperationCompleted);
            }
            this.InvokeAsync("GetLeas", new object[] {
                        accessKey,
                        sharedToken}, this.GetLeasOperationCompleted, userState);
        }
        
        private void OnGetLeasOperationCompleted(object arg) {
            if ((this.GetLeasCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLeasCompleted(this, new GetLeasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://services.alsde.edu/ALSDEAPI/GetPersonDetail", RequestNamespace="http://services.alsde.edu/ALSDEAPI", ResponseNamespace="http://services.alsde.edu/ALSDEAPI", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetPersonDetail(string accessKey, string sharedToken, string mguid) {
            object[] results = this.Invoke("GetPersonDetail", new object[] {
                        accessKey,
                        sharedToken,
                        mguid});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetPersonDetailAsync(string accessKey, string sharedToken, string mguid) {
            this.GetPersonDetailAsync(accessKey, sharedToken, mguid, null);
        }
        
        /// <remarks/>
        public void GetPersonDetailAsync(string accessKey, string sharedToken, string mguid, object userState) {
            if ((this.GetPersonDetailOperationCompleted == null)) {
                this.GetPersonDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPersonDetailOperationCompleted);
            }
            this.InvokeAsync("GetPersonDetail", new object[] {
                        accessKey,
                        sharedToken,
                        mguid}, this.GetPersonDetailOperationCompleted, userState);
        }
        
        private void OnGetPersonDetailOperationCompleted(object arg) {
            if ((this.GetPersonDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPersonDetailCompleted(this, new GetPersonDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://services.alsde.edu/ALSDEAPI/GetUserDetail", RequestNamespace="http://services.alsde.edu/ALSDEAPI", ResponseNamespace="http://services.alsde.edu/ALSDEAPI", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetUserDetail(string accessKey, string sharedToken) {
            object[] results = this.Invoke("GetUserDetail", new object[] {
                        accessKey,
                        sharedToken});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserDetailAsync(string accessKey, string sharedToken) {
            this.GetUserDetailAsync(accessKey, sharedToken, null);
        }
        
        /// <remarks/>
        public void GetUserDetailAsync(string accessKey, string sharedToken, object userState) {
            if ((this.GetUserDetailOperationCompleted == null)) {
                this.GetUserDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserDetailOperationCompleted);
            }
            this.InvokeAsync("GetUserDetail", new object[] {
                        accessKey,
                        sharedToken}, this.GetUserDetailOperationCompleted, userState);
        }
        
        private void OnGetUserDetailOperationCompleted(object arg) {
            if ((this.GetUserDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserDetailCompleted(this, new GetUserDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://services.alsde.edu/ALSDEAPI/GetPersonList", RequestNamespace="http://services.alsde.edu/ALSDEAPI", ResponseNamespace="http://services.alsde.edu/ALSDEAPI", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetPersonList(string accessKey, string sharedToken, string mguid) {
            object[] results = this.Invoke("GetPersonList", new object[] {
                        accessKey,
                        sharedToken,
                        mguid});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetPersonListAsync(string accessKey, string sharedToken, string mguid) {
            this.GetPersonListAsync(accessKey, sharedToken, mguid, null);
        }
        
        /// <remarks/>
        public void GetPersonListAsync(string accessKey, string sharedToken, string mguid, object userState) {
            if ((this.GetPersonListOperationCompleted == null)) {
                this.GetPersonListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPersonListOperationCompleted);
            }
            this.InvokeAsync("GetPersonList", new object[] {
                        accessKey,
                        sharedToken,
                        mguid}, this.GetPersonListOperationCompleted, userState);
        }
        
        private void OnGetPersonListOperationCompleted(object arg) {
            if ((this.GetPersonListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPersonListCompleted(this, new GetPersonListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://services.alsde.edu/ALSDEAPI/GetSchoolsByLea", RequestNamespace="http://services.alsde.edu/ALSDEAPI", ResponseNamespace="http://services.alsde.edu/ALSDEAPI", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetSchoolsByLea(string accessKey, string sharedToken, string syscode) {
            object[] results = this.Invoke("GetSchoolsByLea", new object[] {
                        accessKey,
                        sharedToken,
                        syscode});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetSchoolsByLeaAsync(string accessKey, string sharedToken, string syscode) {
            this.GetSchoolsByLeaAsync(accessKey, sharedToken, syscode, null);
        }
        
        /// <remarks/>
        public void GetSchoolsByLeaAsync(string accessKey, string sharedToken, string syscode, object userState) {
            if ((this.GetSchoolsByLeaOperationCompleted == null)) {
                this.GetSchoolsByLeaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSchoolsByLeaOperationCompleted);
            }
            this.InvokeAsync("GetSchoolsByLea", new object[] {
                        accessKey,
                        sharedToken,
                        syscode}, this.GetSchoolsByLeaOperationCompleted, userState);
        }
        
        private void OnGetSchoolsByLeaOperationCompleted(object arg) {
            if ((this.GetSchoolsByLeaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSchoolsByLeaCompleted(this, new GetSchoolsByLeaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://services.alsde.edu/ALSDEAPI/GetUniversityPrepPrograms", RequestNamespace="http://services.alsde.edu/ALSDEAPI", ResponseNamespace="http://services.alsde.edu/ALSDEAPI", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetUniversityPrepPrograms(string accessKey, string sharedToken) {
            object[] results = this.Invoke("GetUniversityPrepPrograms", new object[] {
                        accessKey,
                        sharedToken});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetUniversityPrepProgramsAsync(string accessKey, string sharedToken) {
            this.GetUniversityPrepProgramsAsync(accessKey, sharedToken, null);
        }
        
        /// <remarks/>
        public void GetUniversityPrepProgramsAsync(string accessKey, string sharedToken, object userState) {
            if ((this.GetUniversityPrepProgramsOperationCompleted == null)) {
                this.GetUniversityPrepProgramsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUniversityPrepProgramsOperationCompleted);
            }
            this.InvokeAsync("GetUniversityPrepPrograms", new object[] {
                        accessKey,
                        sharedToken}, this.GetUniversityPrepProgramsOperationCompleted, userState);
        }
        
        private void OnGetUniversityPrepProgramsOperationCompleted(object arg) {
            if ((this.GetUniversityPrepProgramsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUniversityPrepProgramsCompleted(this, new GetUniversityPrepProgramsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetCertificateTypesCompletedEventHandler(object sender, GetCertificateTypesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCertificateTypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCertificateTypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetGradeLevelsCompletedEventHandler(object sender, GetGradeLevelsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGradeLevelsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGradeLevelsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetLeasCompletedEventHandler(object sender, GetLeasCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLeasCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLeasCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetPersonDetailCompletedEventHandler(object sender, GetPersonDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPersonDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPersonDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetUserDetailCompletedEventHandler(object sender, GetUserDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetPersonListCompletedEventHandler(object sender, GetPersonListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPersonListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPersonListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetSchoolsByLeaCompletedEventHandler(object sender, GetSchoolsByLeaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSchoolsByLeaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSchoolsByLeaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void GetUniversityPrepProgramsCompletedEventHandler(object sender, GetUniversityPrepProgramsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUniversityPrepProgramsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUniversityPrepProgramsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591