@using Microsoft.AspNet.Identity

@{
    ViewBag.Title = "Submissions";
}

<section class="content-header">
    @*<h1>
            Submissions
            <small>Eden report generation and submission results</small>
        </h1>*@

    <div>
        <ul class="breadcrumb pull-right">
            <li><a href="#"><i class="fa fa-dashboard"></i> Home</a></li>
            <li class="active">@ViewBag.CurrentView</li>
        </ul>
    </div>

</section>


<section class="content">
    <div class="row">
        <div class="col-md-12">

            <div class="panel panel-default">

                <div class="panel-heading">
                    <span class="panel-title">Submissions</span>
                    <span class="panel-subtitle">Eden report generation and submission results</span>
                </div>

                <div class="panel-body">

                    @(Html.DevExtreme().DataGrid().ColumnAutoWidth(true).ID("grid")
                                  .OnRowPrepared("rowPrepared").OnEditorPrepared("editorPrepared")
                                  .ShowRowLines(true)
                                  .ShowBorders(true).FilterRow(filterRow => filterRow.Visible(true).ApplyFilter(GridApplyFilterMode.Auto))
                                  .SearchPanel(searchPanel => searchPanel.Visible(true).Width(240).Placeholder("Search...")).HeaderFilter(headerFilter => headerFilter.Visible(true))
                                  .Columns(cols =>
                                  {
                                      cols.Add().DataField("mostRecentReportId").Caption("").Alignment(HorizontalAlignment.Center).Width(35).AllowFiltering(false)
                                          .CellTemplate(@<text>
                                            <a href="@Url.Action("workitemhistory")/<%= value || 0 %>" data-modal="historyModal" data-history data-title="Work History" data-toggle="tooltip" data-placement="right"><i class="fa fa-history"></i></a>
                                        </text>);
                            cols.Add().DataField("fileName");
                            cols.Add().DataField("fileNumber");
                            cols.Add().DataField("dueDate").DataType(GridColumnDataType.Date).Format("MM/dd/YYYY");
                            cols.Add().DataField("displayDataYear").Caption("Data Year");
                            cols.Add().DataField("reportState");
                            cols.Add().DataField("isSEA").Caption("SEA");
                            cols.Add().DataField("isLEA").Caption("LEA");
                            cols.Add().DataField("isSCH").Caption("SCH");
                            cols.Add().Alignment(HorizontalAlignment.Center).CellTemplate(new JS("function(container, options) {createSubmissionGridActionButtons(container, options);}"));
                        })
                        .Paging(paging => paging.PageSize(10)).Pager(pager =>
                        {
                            pager.ShowPageSizeSelector(true);
                            pager.AllowedPageSizes(new List<int> { 5, 10, 20 });
                            pager.ShowInfo(true);
                        })
                        .DataSource(d => d.StaticJson().Url("/api/submissions/all").Key("id"))
                    )
                </div>

            </div>
        </div>
    </div>
</section>


@section scripts
{
    <script src="~/Scripts/app/app.js"></script>

    <script type="text/javascript">

        function rowStyle(row, index) {
            var classes = ['active', 'success', 'info', 'warning', 'danger'];
            if (row.reportStateId === 6) {
                return {
                    classes: classes[4]
                };
            }
            if (row.reportStateId === 7) {
                return {
                    classes: classes[1]
                };
            }
            if (moment().isSameOrAfter(row.dueDate)) {
                return {
                    classes: classes[3]
                };
            }
            if (moment().add(14, 'days').isSameOrAfter(row.dueDate) && row.reportStateId !== 6) {
                return {
                    classes: classes[2]
                };
            }

            return {};
        }

        function checkboxFormatter(value, row, index, field) {
            if (value === true) {
                return '<div class="text-center"><i class="fa fa-check-circle"></i></div>';
            }
            return null;
        }

        function dateFormatter(value, row, index, field) {
            return moment(value).format('MM/DD/YYYY');
        }

        function actionsFormatter(value, row, index, field) {
            //console.log('row', row);
            var lnk = '';
            var canStartReport = row.canStartReport;
            console.log('canstart', canStartReport);
            if (row.reportStateId !== 1) {
                lnk += '<a class="btn btn-default btn-sm btn-grid" href="reports/' +
                    row.dataYear + 
                    '/' +
                    row.fileNumber +
                    '">Reports</a>&nbsp;';
            }
            if (row.reportStateId >= 5) {
                lnk += '<button class="btn btn-default btn-sm btn-grid" data-start data-filespec-id="' +
                    row.id +
                    '">ReOpen</button>';
            }
            if (row.reportStateId === 1) {
                if (canStartReport) {
                    lnk += '<button class="btn btn-default btn-sm btn-grid" data-start data-filespec-id="' +
                        row.id + '">Start</button>&nbsp;';

                } else {
                    lnk += '<button class="btn btn-default btn-sm btn-grid" data-start data-filespec-id="' +
                        row.id +
                        '" disabled="true" data-toggle="tooltip" title="Missing action on specification" data-placement="left">Start</button>&nbsp;';
                }
                lnk += '<button class="btn btn-default btn-sm btn-grid" data-waiver data-filespec-id="' +
                    row.id +
                    '">Waiver</button>';
            }
            return lnk;
        }

        function historyFormatter(value, row, index, field) {
            var lnk = '<a href=/workitemhistory/' +
                row.mostRecentReportId +
                ' data-history data-title="Work History" data-toggle="tooltip" title="Work History" data-placement="right">' +
                '<i class="fa fa-history"></i></a>';
            return lnk;
        }

        function documentFormatter(value, row, index, field) {
            return '<div class="text-center"><i class="fa fa-file"></i></div>';
        }

    </script>
}
