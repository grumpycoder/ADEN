@model string
@{
    ViewBag.Title = "My Assignments";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<section class="content-header">
    <div>
        <ul class="breadcrumb pull-right">
            <li><a href="/"><i class="fa fa-dashboard"></i> Home</a></li>
            <li class="active">@ViewBag.CurrentView</li>
        </ul>
    </div>

</section>

<section class="content">
    <div class="row">
        <div class="col-md-12">
            <div class="panel panel-primary">

                <div class="panel-heading">
                    <span class="header">Current Assignments</span>
                    <small> - Your active tasks to be completed</small>
                </div>

                <div class="panel-body">
                    @(Html.DevExtreme()
                                                                          .DataGrid()
                                                                          .ID("gridCurrentAssignments")
                                                                          .ShowRowLines(true)
                                                                          .ShowBorders(true).FilterRow(filterRow => filterRow.Visible(true).ApplyFilter(GridApplyFilterMode.Auto))
                                                                          .Columns(c =>
                                                                          {
                                                                              c.Add().DataField("fileName");
                                                                              c.Add().DataField("fileNumber").Width(100);
                                                                              c.Add().DataField("displayDataYear").Width(100).Caption("Data Year");
                                                                              c.Add().DataField("assignedDate").Width(150).DataType(GridColumnDataType.Date).Format("MM/dd/YYYY hh:mm"); ;
                                                                              c.Add().DataField("dueDate").Width(150).DataType(GridColumnDataType.Date).Format("MM/dd/YYYY");
                                                                              c.Add().CssClass("btn-cell").Alignment(HorizontalAlignment.Center).AllowResizing(true).CellTemplate(new JS("function(container, options) {createAssignmentsGridActionButtons(container, options);}"));

                                                                          })
                                                                          .DataSource(d => d.StaticJson().Url(@Url.Content("/api/wi/current/" + @Model + "/")).Key("id")))
                </div>

            </div>
        </div>

        <div class="col-md-12">
            <div class="panel panel-success">

                <div class="panel-heading">
                    <span class="header">Completed Actions</span>
                    <small>Tasks you can undo until next action has been completed</small>
                </div>

                <div class="panel-body">
                    @(Html.DevExtreme()
                                                                          .DataGrid()
                                                                          .ID("gridRetrievableAssignments")
                                                                          .ShowRowLines(true)
                                                                          .ShowBorders(true)
                                                                          .FilterRow(filterRow => filterRow.Visible(true).ApplyFilter(GridApplyFilterMode.Auto))
                                                                          .Columns(c =>
                                                                          {
                                                                              c.Add().DataField("fileName");
                                                                              c.Add().DataField("fileNumber");
                                                                              c.Add().DataField("displayDataYear").Caption("Data Year");
                                                                              c.Add().DataField("assignedDate").DataType(GridColumnDataType.Date).Format("MM/dd/YYYY hh:mm"); ;
                                                                              c.Add().DataField("dueDate").DataType(GridColumnDataType.Date).Format("MM/dd/YYYY");
                                                                              c.Add().DataField("completedDate").DataType(GridColumnDataType.Date).Format("MM/dd/YYYY");
                                                                              c.Add().DataField("action");
                                                                              c.Add().Alignment(HorizontalAlignment.Center).CellTemplate(new JS("function(container, options) {createGridCancelActionButtons(container, options);}")); ;
                                                                          })
                                                                          .DataSource(d => d.StaticJson().Url(@Url.Content("/api/wi/completed/" + @Model + "/")).Key("id")))
                </div>

            </div>
        </div>

    </div>
</section>



<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModal" aria-hidden="true" data-backdrop="static" data-keyboard="false">
    <div id="modalContainer">
    </div>
</div>


@section scripts
{
    @*@Scripts.Render("~/bundles/jqueryval")*@
    <script src="~/Scripts/jquery.validate.js"></script>
    <script src="~/Scripts/jquery.unobtrusive-ajax.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.js"></script>
    <script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>

    <script src="~/js/app/app.js"></script>
    <script src="~/js/app/assignments.js"></script>
    
}
